{"ast":null,"code":"class Api {\n  constructor(url, token) {\n    this.checkResult = res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        return Promise.reject(`Ошибка: ${res.status}`);\n      }\n    };\n\n    this._url = url;\n    this._authorizationToken = token;\n    this._headers = {\n      authorization: this._authorizationToken,\n      'Content-Type': 'application/json'\n    };\n  }\n\n  getUserInfo() {\n    return fetch(this._url + '/users/me', {\n      method: 'GET',\n      headers: {\n        authorization: this._authorizationToken\n      }\n    }).then(this.checkResult);\n  }\n\n  getInitialCards() {\n    return fetch(this._url + '/cards', {\n      headers: {\n        authorization: this._authorizationToken\n      }\n    }).then(this.checkResult);\n  }\n\n  editProfile(data) {\n    return fetch(this._url + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this.checkResult);\n  }\n\n  addPlace(data) {\n    return fetch(this._url + '/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(this.checkResult);\n  }\n\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this.checkResult);\n  }\n\n  addLike(cardId) {\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this.checkResult);\n  }\n\n  deleteLike(cardId) {\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this.checkResult);\n  }\n\n  addAvatar(avatar) {\n    return fetch(this._url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    }).then(this.checkResult);\n  }\n\n}\n\nexport const api = new Api('https://nomoreparties.co/v1/cohort-28', 'd0022a9e-a6be-4d9a-ab6e-3949875c7c34');","map":{"version":3,"sources":["/home/ivan/mesto-react/src/utils/Api.js"],"names":["Api","constructor","url","token","checkResult","res","ok","json","Promise","reject","status","_url","_authorizationToken","_headers","authorization","getUserInfo","fetch","method","headers","then","getInitialCards","editProfile","data","body","JSON","stringify","addPlace","deletePost","cardId","addLike","deleteLike","addAvatar","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._authorizationToken = token;\n    this._headers ={authorization:this._authorizationToken, 'Content-Type': 'application/json'};\n  }\n  getUserInfo() {\n    return fetch(this._url +'/users/me', {\n      method: 'GET',\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  getInitialCards() {\n    return fetch(this._url +'/cards', {\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  editProfile(data){\n    return fetch(this._url +'/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n    .then(this.checkResult);\n  }\n  addPlace(data){\n    return fetch(this._url +'/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n    .then(this.checkResult);\n  }\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  deleteLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addAvatar(avatar){\n    return fetch(this._url +'/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this.checkResult);\n  }\n  checkResult = res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n}\nexport const api = new Api('https://nomoreparties.co/v1/cohort-28', 'd0022a9e-a6be-4d9a-ab6e-3949875c7c34');"]},"metadata":{},"sourceType":"module"}