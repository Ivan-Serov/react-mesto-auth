{"ast":null,"code":"export var BASE_URL = 'https://auth.nomoreparties.co';\nexport var register = function register(email, password) {\n  return fetch(\"\".concat(BASE_URL, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var authorize = function authorize(email, password) {\n  return fetch(\"\".concat(BASE_URL, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\nexport var checkToken = function checkToken(token) {\n  return fetch(\"\".concat(BASE_URL, \"/users/me\"), {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \".concat(token)\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return data;\n  });\n};","map":{"version":3,"sources":["/home/ivan/react-mesto-auth/src/components/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","res","catch","err","console","log","authorize","data","checkToken","token"],"mappings":"AAAA,OAAO,IAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAOC,KAAK,WAAIJ,QAAJ,cAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,QAAQ,EAARA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNO,IARM,CAQD,UAACC,QAAD,EAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVM,EAWNF,IAXM,CAWD,UAACG,GAAD,EAAS;AACb,WAAOA,GAAP;AACD,GAbM,EAcNC,KAdM,CAcA,UAACC,GAAD;AAAA,WAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,GAdA,CAAP;AAeD,CAhBM;AAkBP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAAChB,KAAD,EAAQC,QAAR,EAAqB;AAC1C,SAAOC,KAAK,WAAIJ,QAAJ,cAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,QAAQ,EAARA;AAAR,KAAf;AAN2B,GAAvB,CAAL,CAQNO,IARM,CAQD,UAAAG,GAAG;AAAA,WAAIA,GAAG,CAACD,IAAJ,EAAJ;AAAA,GARF,EASNF,IATM,CASD,UAAAS,IAAI;AAAA,WAAIA,IAAJ;AAAA,GATH,EAUNL,KAVM,CAUA,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAVH,CAAP;AAWD,CAZI;AAcL,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACnC,SAAOjB,KAAK,WAAIJ,QAAJ,gBAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB,kBAFT;AAGP,wCAA2Be,KAA3B;AAHO;AAF0B,GAAzB,CAAL,CAQNX,IARM,CAQD,UAAAG,GAAG;AAAA,WAAIA,GAAG,CAACD,IAAJ,EAAJ;AAAA,GARF,EASNF,IATM,CASD,UAAAS,IAAI;AAAA,WAAIA,IAAJ;AAAA,GATH,CAAP;AAUD,CAXM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => console.log(err))\n  };\n\n  export const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n  }"]},"metadata":{},"sourceType":"module"}