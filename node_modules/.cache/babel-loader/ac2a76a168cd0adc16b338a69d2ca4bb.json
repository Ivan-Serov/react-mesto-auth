{"ast":null,"code":"import _classCallCheck from\"/home/ivan/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ivan/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(url,token){_classCallCheck(this,Api);this.checkResult=function(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}};this._url=url;this._authorizationToken=token;this._headers={authorization:this._authorizationToken,'Content-Type':'application/json'};}_createClass(Api,[{key:\"getUserInfo\",value:function getUserInfo(){return fetch(this._url+'/users/me',{method:'GET',headers:{authorization:this._authorizationToken}}).then(this.checkResult);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(this._url+'/cards',{headers:{authorization:this._authorizationToken}}).then(this.checkResult);}},{key:\"editProfile\",value:function editProfile(data){return fetch(this._url+'/users/me',{method:'PATCH',headers:this._headers,body:JSON.stringify(data)}).then(this.checkResult);}},{key:\"addPlace\",value:function addPlace(data){return fetch(this._url+'/cards',{method:'POST',headers:this._headers,body:JSON.stringify(data)}).then(this.checkResult);}},{key:\"deletePost\",value:function deletePost(cardId){return fetch(this._url+'/cards/'+cardId,{method:'DELETE',headers:this._headers}).then(this.checkResult);}},{key:\"addLike\",value:function addLike(cardId){return fetch(this._url+'/cards/likes/'+cardId,{method:'PUT',headers:this._headers}).then(this.checkResult);}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(this._url+'/cards/likes/'+cardId,{method:'DELETE',headers:this._headers}).then(this.checkResult);}},{key:\"addAvatar\",value:function addAvatar(avatar){return fetch(this._url+'/users/me/avatar',{method:'PATCH',headers:this._headers,body:JSON.stringify(avatar)}).then(this.checkResult);}}]);return Api;}();export var api=new Api('https://nomoreparties.co/v1/cohort-28','d0022a9e-a6be-4d9a-ab6e-3949875c7c34');","map":{"version":3,"sources":["/home/ivan/react-mesto-auth/src/utils/Api.js"],"names":["Api","url","token","checkResult","res","ok","json","Promise","reject","status","_url","_authorizationToken","_headers","authorization","fetch","method","headers","then","data","body","JSON","stringify","cardId","avatar","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._authorizationToken = token;\n    this._headers ={authorization:this._authorizationToken, 'Content-Type': 'application/json'};\n  }\n  getUserInfo() {\n    return fetch(this._url +'/users/me', {\n      method: 'GET',\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  getInitialCards() {\n    return fetch(this._url +'/cards', {\n      headers: {\n        authorization: this._authorizationToken\n      }})\n    .then(this.checkResult);\n  }\n  editProfile(data){\n    return fetch(this._url +'/users/me', {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      })\n    .then(this.checkResult);\n  }\n  addPlace(data){\n    return fetch(this._url +'/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify(data)\n    })\n    .then(this.checkResult);\n  }\n  deletePost(cardId) {\n    return fetch(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'PUT',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  deleteLike(cardId){\n    return fetch(this._url + '/cards/likes/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(this.checkResult);\n  }\n  addAvatar(avatar){\n    return fetch(this._url +'/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n    .then(this.checkResult);\n  }\n  checkResult = res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  }\n}\nexport const api = new Api('https://nomoreparties.co/v1/cohort-28', 'd0022a9e-a6be-4d9a-ab6e-3949875c7c34');"]},"metadata":{},"sourceType":"module"}